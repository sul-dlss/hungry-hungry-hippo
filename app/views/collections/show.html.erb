<%= turbo_stream_from @collection %>

<% content_for :breadcrumbs do %>
  <%= render Elements::BreadcrumbNavComponent.new do |component| %>
    <% component.with_breadcrumb(text: 'Dashboard', link: dashboard_path) %>
    <% if current_page?(action: :new) %>
      <% component.with_breadcrumb(text: I18n.t('collections.edit.no_title')) %>
    <% else %>
      <% component.with_collection_breadcrumb(text: @collection_form.title, active: true) %>
    <% end %>
  <% end %>
<% end %>

<% deposits_active = params[:tab] == 'deposits' %>
<%= render Elements::Tabs::TabListComponent.new(classes: 'nav-underline mb-3') do |component| %>
  <% component.with_tab(id: 'details-tab', pane_id: 'details-pane', label: 'Collection information', active: !deposits_active) %>
  <% component.with_tab(id: 'deposits-tab', pane_id: 'deposits-pane', label: 'Deposits', active: deposits_active) %>

  <% component.with_header do %>
    <%= render Collections::Show::HeaderComponent.new(presenter: @collection_presenter) %>
  <% end %>

  <%= component.with_pane(id: 'details-pane', tab_id: 'details-tab', active: !deposits_active) do %>
    <%= render Elements::Tables::TableComponent.new(id: 'info-table', classes: 'mb-5') do |component| %>
      <% component.with_caption do %><%= render Show::TableHeadingComponent.new(text: 'Collection information') %><% end %>
      <% component.with_row(label: 'PURL', values: [@collection_presenter.purl_link]) %>
      <% component.with_row(label: 'Created by', values: [@collection_presenter.created_by]) %>
      <% component.with_row(label: 'Collection created', values: [@collection_presenter.created_datetime]) %>
    <% end %>

    <%= render Elements::Tables::TableComponent.new(id: 'details-table', classes: 'mb-5') do |component| %>
      <% component.with_caption do %><%= render Show::TableHeadingComponent.new(text: 'Details', presenter: @collection_presenter, tab: :details) %><% end %>
      <% component.with_row(label: 'Collection name', values: [@collection_presenter.title]) %>
      <% component.with_row(label: 'Description', values: [@collection_presenter.description]) %>
      <% component.with_row(label: 'Contact emails', values: [@collection_presenter.contact_emails]) %>
    <% end %>

    <%= render Elements::Tables::TableComponent.new(id: 'related-content-table', classes: 'mb-5') do |component| %>
      <% component.with_caption do %><%= render Show::TableHeadingComponent.new(text: 'Links to related information', presenter: @collection_presenter, tab: :related_links) %><% end %>
      <% component.with_row(label: 'Related links') do |row_component| %>
        <% row_component.with_cell do %><%= render Elements::Tables::ListCellComponent.new(item_values: @collection_presenter.related_links) %> <% end %>
      <% end %>
    <% end %>

    <%= render Elements::Tables::TableComponent.new(id: 'work-type-table', classes: 'mb-5') do |component| %>
      <% component.with_caption do %><%= render Show::TableHeadingComponent.new(text: 'Type of deposit', presenter: @collection_presenter, tab: :types) %><% end %>
      <% component.with_row(label: 'Deposit type', values: [@collection_presenter.work_type]) %>
      <% component.with_row(label: 'Deposit subtypes', values: [@collection_presenter.work_subtypes.join(', ')]) %>
    <% end %>

    <%= render Elements::Tables::TableComponent.new(id: 'release-visibility-table', classes: 'mb-5') do |component| %>
      <% component.with_caption do %><%= render Show::TableHeadingComponent.new(text: 'Release and visibility', presenter: @collection_presenter, tab: :access) %><% end %>
      <% component.with_row(label: 'Release', values: [@collection_presenter.release]) %>
      <% component.with_row(label: 'Visibility', values: [@collection_presenter.visibility]) %>
      <% component.with_row(label: 'DOI Assignment', values: [@collection_presenter.doi_assignment]) %>
    <% end %>

    <%= render Elements::Tables::TableComponent.new(id: 'terms-licenses-table', classes: 'mb-5') do |component| %>
      <% component.with_caption do %><%= render Show::TableHeadingComponent.new(text: 'Terms of use and licenses', presenter: @collection_presenter, tab: :license) %><% end %>
      <% component.with_row(label: 'Terms of use', values: [t('license.terms_of_use')]) %>
      <% component.with_row(label: 'Additional terms of use', values: [simple_format(@collection_presenter.additional_terms_of_use).html_safe]) %> <%# erb_lint:disable ErbSafety %>
      <% component.with_row(label: 'License', values: [@collection_presenter.license_option_label]) %>
    <% end %>

    <%= render Elements::Tables::TableComponent.new(id: 'participants-table', classes: 'mb-5') do |component| %>
      <% component.with_caption do %><%= render Show::TableHeadingComponent.new(text: 'Collection participants', presenter: @collection_presenter, tab: :participants) %><% end %>
      <% component.with_row(label: 'Managers') do |row_component| %>
        <% row_component.with_cell do %><%= render Elements::Tables::ListCellComponent.new(item_values: @collection_presenter.participants(:managers)) %> <% end %>
      <% end %>
      <% component.with_row(label: 'Depositors') do |row_component| %>
        <% row_component.with_cell do %><%= render Elements::Tables::ListCellComponent.new(item_values: @collection_presenter.participants(:depositors)) %> <% end %>
      <% end %>
    <% end %>

    <%= render Elements::Tables::TableComponent.new(id: 'review-workflow-table', classes: 'mb-5') do |component| %>
      <% component.with_caption do %><%= render Show::TableHeadingComponent.new(text: 'Review workflow', presenter: @collection_presenter, tab: :workflow) %><% end %>
      <% component.with_row(label: 'Status', values: [@collection_presenter.review_workflow_status]) %>
      <% component.with_row(label: 'Reviewers') do |row_component| %>
        <% row_component.with_cell do %><%= render Elements::Tables::ListCellComponent.new(item_values: @collection_presenter.participants(:reviewers)) %> <% end %>
      <% end %>
    <% end %>
  <% end %>

  <%= component.with_pane(id: 'deposits-pane', tab_id: 'deposits-tab', active: deposits_active) do %>
    <%= turbo_frame_tag 'collection-works', src: works_collection_path(@collection) do %>
      <%= render Elements::SpinnerComponent.new %>
    <% end %>
  <% end %>
<% end %>
