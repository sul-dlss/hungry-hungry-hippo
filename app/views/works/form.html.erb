<% content_for :breadcrumbs do %>
  <%= render Elements::BreadcrumbNavComponent.new do |component| %>
    <% component.with_breadcrumb(text: 'Dashboard', link: root_path) %>
    <% component.with_breadcrumb(text: @collection.title, link: collection_path(druid: @work_form.collection_druid)) %>
    <% if (current_page?(action: :new) || (controller.action_name == 'create')) %>
      <% component.with_breadcrumb(text: I18n.t('works.edit.no_title')) %>
    <% else %>
      <% component.with_breadcrumb(text: @work_form.title, link: work_path(druid: @work.druid)) %>
      <% component.with_breadcrumb(text: t('works.edit.breadcrumb')) %>
    <% end %>
  <% end %>
<% end %>
<%= render Elements::HeadingComponent.new(level: :h1, variant: :h2, text: @work_form.title || t('works.edit.no_title'), classes: 'mb-3') %>
<%= render Works::Show::ReviewRejectedComponent.new(work: @work) if @work %>
<%= render Elements::AlertComponent.new(variant: :danger, value: t('messages.validation')) if @work_form.errors.present? %>
<% form_id = dom_id(@work_form, 'tabbed_form') %>
<% discard_draft_form_id = dom_id(@work_form, 'discard_form') %>
<%= render Edit::DiscardDraftFormComponent.new(presenter: @work_presenter, id: discard_draft_form_id) if @work_presenter %>
<%= render Edit::TabForm::TabListComponent.new(model: @work_form, form_id:, hidden_fields: %i[lock version collection_druid content_id]) do |component| %>
  <% component.with_tab(label: t('works.edit.panes.files.tab_label'), tab_name: :files, selected: true) %>
  <% component.with_tab(label: t('works.edit.panes.title.tab_label'), tab_name: :title) %>
  <% component.with_tab(label: t('works.edit.panes.contributors.tab_label'), tab_name: :contributors) %>
  <% component.with_tab(label: t('works.edit.panes.abstract.tab_label'), tab_name: :abstract) %>
  <% component.with_tab(label: t('works.edit.panes.types.tab_label'), tab_name: :types) %>
  <% component.with_tab(label: t('works.edit.panes.doi.tab_label'), tab_name: :doi) %>
  <% component.with_tab(label: t('works.edit.panes.dates.tab_label'), tab_name: :dates) %>
  <% component.with_tab(label: t('works.edit.panes.citation.tab_label'), tab_name: :citation) %>
  <% component.with_tab(label: t('works.edit.panes.related_content.tab_label'), tab_name: :related_content) %>
  <% component.with_tab(label: t('works.edit.panes.access.tab_label'), tab_name: :access) %>
  <% component.with_tab(label: t('works.edit.panes.license.tab_label'), tab_name: :license) %>
  <% component.with_tab(label: t('works.edit.panes.deposit.tab_label'), tab_name: :deposit) %>
  <%# The panes below need a form in order to render their contents. This provides a "fake" form to use for that purpose. %>
  <%# TabListComponent will render the actual form. %>
  <% form_with(model: @work_form) do |form| %>
    <%# This pane is outside the work form because it contains its own forms for files. %>
    <% component.with_before_form_pane do %>
      <%= render Works::Edit::PaneComponent.new(tab_name: :files, label: t('works.edit.panes.files.label'), selected: true, form_id:, discard_draft_form_id:, work_presenter: @work_presenter) do %>
        <%= turbo_stream_from @content %>

        <%= render Elements::Forms::InvalidFeedbackComponent.new(form:, field_name: :content) %>

        <%= render 'contents/edit', content: @content %>

        <%= render Elements::HorizontalRuleComponent.new(classes: 'my-3') %>
        <%= render Edit::SectionHeaderComponent.new(title: t('works.edit.panes.files.list')) %>
        <div id="content-files">
          <%= render partial: 'contents/show', locals: { content: @content, content_files: @content.content_files.page(1) } %>
        </div>
      <% end %>
    <% end %>

    <% component.with_pane do %>
      <%= render Works::Edit::PaneComponent.new(tab_name: :title, label: t('works.edit.panes.title.label'), form_id:, discard_draft_form_id:, work_presenter: @work_presenter) do %>
        <%= render Elements::Forms::TextFieldComponent.new(form:, field_name: :title, label: t('works.edit.fields.title.label'),
                                                           help_text: t('works.edit.fields.title.help_text'), width: 500, container_classes: 'mb-4') %>
        <%= render NestedComponentPresenter.for(form:, field_name: :contact_emails, model_class: ContactEmailForm, form_component: ContactEmails::EditComponent, hidden_label: true, bordered: false, single_field: true) %>
      <% end %>
    <% end %>

    <% component.with_pane do %>
      <%= render Works::Edit::PaneComponent.new(tab_name: :contributors, label: t('works.edit.panes.contributors.label'), help_text: t('works.edit.panes.contributors.help_text'), form_id:, discard_draft_form_id:, work_presenter: @work_presenter) do %>
        <%= render NestedComponentPresenter.for(form:, field_name: :contributors, model_class: ContributorForm, form_component: Works::Edit::ContributorComponent, hidden_label: true, reorderable: true) %>
      <% end %>
    <% end %>

    <% component.with_pane do %>
      <%= render Works::Edit::PaneComponent.new(tab_name: :abstract, label: t('works.edit.panes.abstract.label'), help_text: t('works.edit.panes.abstract.help_text'), form_id:, discard_draft_form_id:, work_presenter: @work_presenter) do %>
        <%= render Elements::Forms::TextareaFieldComponent.new(form:, field_name: :abstract, label: t('works.edit.fields.abstract.label')) %>
        <%= render NestedComponentPresenter.for(form:, field_name: :keywords, model_class: KeywordForm, form_component: Keywords::EditComponent, hidden_label: false, bordered: false, single_field: true) %>
      <% end %>
    <% end %>

    <% component.with_pane do %>
      <%= render Works::Edit::PaneComponent.new(tab_name: :types, form_id:, discard_draft_form_id:, work_presenter: @work_presenter) do %>
        <%= render Works::Edit::WorkTypeComponent.new(form:) %>
      <% end %>
    <% end %>

    <% component.with_pane do %>
      <%= render Works::Edit::PaneComponent.new(tab_name: :doi, label: t('works.edit.panes.doi.label'), form_id:, discard_draft_form_id:, work_presenter: @work_presenter) do %>
        <%= render Works::Edit::DoiComponent.new(form:, collection: @collection) %>
      <% end %>
    <% end %>

    <% component.with_pane do %>
      <%= render Works::Edit::PaneComponent.new(tab_name: :dates, label: t('works.edit.panes.dates.label'), form_id:, discard_draft_form_id:, work_presenter: @work_presenter) do %>
        <%= render Works::Edit::DatesComponent.new(form:) %>
      <% end %>
    <% end %>

    <% component.with_pane do %>
      <%= render Works::Edit::PaneComponent.new(tab_name: :citation, label: t('works.edit.panes.citation.label'), form_id:, discard_draft_form_id:, work_presenter: @work_presenter) do %>
        <%= render Works::Edit::CitationComponent.new(form:) %>
      <% end %>
    <% end %>

    <% component.with_pane do %>
      <%= render Works::Edit::PaneComponent.new(tab_name: :related_content, label: t('works.edit.panes.related_content.label'), form_id:, discard_draft_form_id:, work_presenter: @work_presenter) do %>
        <%= render NestedComponentPresenter.for(form:, field_name: :related_works, model_class: RelatedWorkForm, form_component: RelatedWorks::EditComponent) %>
        <%= render NestedComponentPresenter.for(form:, field_name: :related_links, model_class: RelatedLinkForm, form_component: RelatedLinks::EditComponent) %>
      <% end %>
    <% end %>

    <% component.with_pane do %>
      <%= render Works::Edit::PaneComponent.new(tab_name: :access, label: t('works.edit.panes.access.label'), form_id:, discard_draft_form_id:, work_presenter: @work_presenter) do %>
        <%= render Works::Edit::AccessSettingsComponent.new(form:, collection: @collection) %>
      <% end %>
    <% end %>

    <% component.with_pane do %>
      <%= render Works::Edit::PaneComponent.new(tab_name: :license, label: t('works.edit.panes.license.label'), form_id:, discard_draft_form_id:, work_presenter: @work_presenter) do %>
        <%= render Works::Edit::LicenseComponent.new(form:, license_presenter: @license_presenter) %>
        <% unless @collection.no_custom_rights_statement_option? %>
          <%= render Elements::HorizontalRuleComponent.new(classes: 'my-3') %>
          <%= render Works::Edit::TermsOfUseComponent.new(form:, collection: @collection) %>
        <% end %>
      <% end %>
    <% end %>

    <% component.with_pane do %>
      <%= render Works::Edit::PaneComponent.new(tab_name: :deposit, label: t('works.edit.panes.deposit.label'), form_id:, discard_draft_form_id:, work_presenter: @work_presenter) do |component| %>
        <p><%= t('works.edit.panes.deposit.help_text') %></p>

        <%= render Works::Edit::TermsOfDepositComponent.new(form:) %>

        <% component.with_deposit_button do %>
          <%= render Works::Edit::SubmitComponent.new(work: @work, collection: @collection) %>
        <% end %>
      <% end %>
    <% end %>
  <% end %>
<% end %>
